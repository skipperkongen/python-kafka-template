version: '3.3'

services:
  api_web:
    build: src
    ports:
      - "80:8000"
    volumes:
      - ${PWD}/config/offline.config.yaml:/app/config.yaml
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "1", "main_web:app", "-k", "sync"]
    environment:
      ADMIN_USERNAME: test
      ADMIN_PASSWORD: test

  api_kafka:
    build: src
    volumes:
      - ${PWD}/config/offline.config.yaml:/app/config.yaml
    command: ["python3", "main_kafka.py"]


  # api:
  #   build: src
  #   restart: always
  #   depends_on:
  #     - kafka
  #     # - db
  #   volumes:
  #     - ${PWD}/config/offline.config.yaml:/app/config.yaml
  #   ports:
  #     - "80:8000"
  #   command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "1", "main:app", "-k", "sync"]

  db:
    # https://hub.docker.com/_/postgres
    image: postgres:11
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DATABASE: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ${PWD}/data/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  kafka_upstream_1:
    build: src-offline
    depends_on:
      - kafka
    restart: always
    entrypoint: ["python3", "kafka_producer.py"]
    environment:
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: upstream1
      KAFKA_MESSAGE: '{"subject": "foo"}'
      SLEEP_SECONDS: 3

  kafka_upstream_2:
    build: src-offline
    depends_on:
      - kafka
    restart: always
    entrypoint: ["python3", "kafka_producer.py"]
    environment:
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: upstream2
      KAFKA_MESSAGE: '{"subject":"bar"}'
      SLEEP_SECONDS: 2

  kafka_downstream1:
    build: src-offline
    depends_on:
      - kafka
    restart: always
    entrypoint: ["python3", "kafka_consumer.py"]
    environment:
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: downstream1
      KAFKA_CONSUMER_GROUP: '0'

  zookeeper:
    # https://hub.docker.com/r/wurstmeister/zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    # https://hub.docker.com/r/wurstmeister/kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS: 'upstream1:1:1,upstream2:1:1,downstream1:1:1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db-data:
